- hosts: "masters, workers"
  remote_user: "{{ ansible_user }}"
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  
  tasks: 
   - name: Make the Swap inactive
     command: swapoff -a
   - name: Remove Swap entry from /etc/fstab.
     lineinfile:
       dest: /etc/fstab
       regexp: swap
       state: absent
   - name: Installing Prerequisites for Kubernetes
     apt: 
       name:
         - apt-transport-https
         - ca-certificates
         - curl
         - gnupg-agent
         - vim
         - software-properties-common
       state: present
   - name: Add Dockers official GPG key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present
   - name: Add Docker Repository
     apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
       state: present
       filename: docker
       mode: 0600
   - name: Install Docker Engine.
     apt: 
       name:
         - docker.io
       state: present
   - name: Enable service docker, and enable persistently
     service: 
       name: docker
       enabled: yes
   - name: Add Google official GPG key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present
   - name: Add Kubernetes Repository
     apt_repository:
       repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
       state: present
       filename: kubernetes
       mode: 0600
   - name: Installing Kubernetes Cluster Packages.
     apt: 
       name:
         - kubeadm
         - kubectl
         - kubelet
       state: present
   - name: Enable service kubelet, and enable persistently
     service: 
       name: kubelet
       enabled: yes
   - name: Reboot all the kubernetes nodes.
     reboot:
       post_reboot_delay: 10
       reboot_timeout: 40
       connect_timeout: 60
       test_command: uptime
   - pause: seconds=20

- hosts: masters
  remote_user: "{{ ansible_user }}"
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  tasks:
   - name: Intilizing Kubernetes Cluster
     command: --pod-network-cidr=172.32.0.0/16  --apiserver-advertise-address "{{ master_ip }}"
     run_once: true
     delegate_to: "{{ master_ip }}"
   - pause: seconds=90
   - name: Create directory for kube config.
     become_user: "{{ ansible_user }}"
     become_method: sudo
     become: yes
     file: 
       path: /home/{{ ansible_user }}/.kube
       state: directory
       owner: "{{ ansible_user }}"
       group: "{{ ansible_user }}"
       mode: 0755
   - name: Copy /etc/kubernetes/admin.conf to user home directory /home/{{ ansible_user }}/.kube/config.
     become_user: root
     become_method: sudo
     become: yes
     copy:
       src: /etc/kubernetes/admin.conf
       dest: /home/{{ ansible_user }}/.kube/config
       remote_src: yes
       owner: "{{ ansible_user }}"
       group: "{{ ansible_user }}"
       mode: '0644'
   - pause: seconds=10

   - name: Create Pod Network
     become_user: "{{ ansible_user }}"
     become_method: sudo
     become: yes
     command: "{{ item }}"
     with_items: 
        - kubectl apply -f https://gist.githubusercontent.com/AlmogLevig/64f6efcef8a908952dfcd9b2bbd57299/raw/4f1f3e52f65f8e1304583870d6c0e5f2671344f0/flannel.yml
   - pause: seconds=90   

   - name: Create ingress Controller 
     become_user: "{{ ansible_user }}"
     become_method: sudo
     become: yes
     command: "{{ item }}"
     with_items: 
        - kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.1/deploy/static/provider/aws/deploy.yaml
   - pause: seconds=90

   - name: Get the token for joining the nodes with Kuberentes master.
     shell: kubeadm token create  --print-join-command
     register: kubernetes_join_command
   - debug:
       msg: "{{ kubernetes_join_command.stdout }}"
   
   - name: Copy join command to local file.
     become: false
     local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
   

- hosts: workers
  remote_user: "{{ ansible_user }}"
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  tasks:
   - name: Copy join command to worker nodes.
     become: yes
     become_method: sudo
     become_user: root
     copy:
       src: /tmp/kubernetes_join_command
       dest: /tmp/kubernetes_join_command
       mode: 0777   
   - name: Join the Worker nodes with the master.
     become: yes
     become_method: sudo
     become_user: root
     command: sh /tmp/kubernetes_join_command
     register: joined_or_not
   - debug:
       msg: "{{ joined_or_not.stdout }}"

- hosts: masters
  remote_user: "{{ ansible_user }}"
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  tasks:
    - name: Configure kubectl command auto-completion.
      lineinfile:
        dest: /home/{{ ansible_user }}/.bashrc
        line: 'source <(kubectl completion bash)'
        insertafter: EOF
    - name: Applying Reverse-app
      become_user: "{{ ansible_user }}"
      become_method: sudo
      become: yes
      command: "{{ item }}"
      with_items: 
        - kubectl apply -f https://gist.githubusercontent.com/AlmogLevig/dffde8e8d8562d3bebeb4aacc843d314/raw/87487ba0a286108692d0ee45e333226bf6277897/reverse-app.yml
